apply plugin: 'com.android.application'

android {
    compileSdkVersion 31
    buildToolsVersion "30.0.3"
    defaultConfig {
        applicationId "com.tsymiar.device2device"
        minSdkVersion 21 // 15 // Cannot fit requested classes in a single dex file
        targetSdkVersion 31
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                arguments "-DANDROID_ARM_NEON=TRUE"
                cppFlags "-std=c++11"
                arguments "-DBUILD_SCADUP_LIB=1" // "0" to compile with libscadup.so file
            }
        }
        splits {
            abi {
                reset()
                enable true
                universalApk false  // If true, also generate a universal APK
                include "x86_64", "arm64-v8a", "armeabi-v7a"
                // 'arm64-v8a', 64 bit ARM architecture,it can use v7 version
                //              unless you are too much concerned about performance
                // mips,mips64, There are no devices with MIPS
                //  x86_64, No android devices and anyway it can use X86 version
                //  armeabi, very old architecture. Unsupported after Android 4.4
                // 'x86', Intel based devices
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        cmake {
            path file("src/main/cpp/CMakeLists.txt")
        }
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
    packagingOptions {
        pickFirst 'lib/arm64-v8a/*.so'
        pickFirst 'lib/armeabi-v7a/*.so'
        pickFirst 'lib/x86_64/*.so'
        exclude 'META-INF/DEPENDENCIES'
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
    ndkVersion '23.0.7599858'
    buildFeatures {
        viewBinding true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: '*.aar').each { File file ->
        def name = file.name.lastIndexOf('.').with { it != -1 ? file.name[0..<it] : file.name }
        compile(name: name, ext: 'aar')
        dependencies.add("compile", [name: name, ext: 'aar'])
        compile 'com.android.support:appcompat-v7:23.4.0'
    }
    implementation fileTree(dir: 'libs', include: ['*.jar', '*.so'])
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.annotation:annotation:1.2.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.3.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1'
    implementation "com.google.android.material:material:1.3.0"
    implementation 'com.google.firebase:firebase-crashlytics-buildtools:3.0.2'
    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'
    implementation 'com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}

allprojects {
    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            // options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
        }
    }
}
